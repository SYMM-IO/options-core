// SPDX-License-Identifier: SYMM-Core-Business-Source-License-1.1
// This contract is licensed under the SYMM Core Business Source License 1.1
// Copyright (c) 2023 Symmetry Labs AG
// For more information, see https://docs.symm.io/legal-disclaimer/license
pragma solidity >=0.8.19;

import { SignatureChecker } from "@openzeppelin/contracts/utils/cryptography/SignatureChecker.sol";

/**
 * @notice A minimal contract that hashes and verifies signatures
 *         for creating open intents on behalf of Party A.
 */
contract SignatureVerifier {
	function verifySignature(address signer, bytes32 hash, bytes calldata signature) public view returns (bool) {
		return SignatureChecker.isValidSignatureNow(signer, hash, signature);
	}

	/// @notice Verifies that the signer is the owner of the signing contract.
	/// @dev This function implements EIP-1271 `isValidSignature` standard for contract-based signature validation.
	/// @param hash The hash of the data signed.
	/// @param signature The signature generated by the signer.
	/// @return magicValue A magic value (0x1626ba7e) if the signature is valid, 0xffffffff otherwise.
	function isValidSignatureEIP1271(
		bytes32 hash,
		bytes calldata signature,
		address signer
	) external view returns (bytes4) {
		return verifySignature(
			signer,
			hash,
			signature)
			? bytes4(0x1626ba7e) : bytes4(0xffffffff) ;
	}
}
